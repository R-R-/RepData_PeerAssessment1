non_na <- data[!is.na(data$steps),]
non_na$steps
total <- tapply(non_na$steps, non_na$date, sum)
total
non_na[non_na$date="2012-11-09",]
non_na[non_na$date=="2012-11-09",]
mean(total)
?tapply
?apply
?sapply
level(total)
factors(total)
factor(total)
sum(is.na(total))
length(total)
length(total[!is.na(total)])
length(data$steps)
steps <- data$steps
length(steps)
length(steps[!is.na(steps)])
data <- data[!is.na(steps),]
total <- tapply(data$steps, data$date, sum)
mean(total)
clear
clc
data <- read.csv("activity.csv")
summary(data)
interval_avg <- tapply(data$steps, data$interval, avg)
interval_avg <- tapply(data$steps, data$interval, average)
interval_avg <- tapply(data$steps, data$interval, sum)
unique
?unique
length(unique(data$date))
plot(interval_avg, main="average daily activity",
xlab="5-minute interval",
ylab="average number of steps taken",
type=1)
barplot(interval_avg, main="average daily activity",
xlab="5-minute interval",
ylab="average number of steps taken")
internal_avg
interval_avg <- tapply(data$steps, data$interval, sum) / length(unique(data$date))
summary(interval_avg)
interval_avg <- tapply(data$steps, data$interval, sum)
barplot(interval_avg, main="average daily activity",
xlab="5-minute interval",
ylab="average number of steps taken")
data <- read.csv("activity.csv")
interval_avg <- tapply(data$steps, data$interval, sum)
summary(interval_avg)
summary(data)
summary(data$steps)
summary(data$interval)
data <- read.csv("activity.csv")
data <- data[!is.na(data$steps),]
summary(data)
total <- tapply(data$steps, data$date, sum)
barplot(total, main="Total number of steps taken each day",
xlab="Date",
ylab="Total number of steps")
mean(total[!is.na(total)])
median(total[!is.na(total)])
interval_avg <- tapply(data$steps, data$interval, sum)
barplot(interval_avg, main="average daily activity",
xlab="5-minute interval",
ylab="average number of steps taken")
interval_avg <- tapply(data$steps, data$interval, sum) / length(unique(data$date))
barplot(interval_avg, main="average daily activity",
xlab="5-minute interval",
ylab="average number of steps taken")
?max
?hist
hist(total, main="Total number of steps taken each day",
xlab="Date",
ylab="Total number of steps")
barplot(total, main="Total number of steps taken each day",
xlab="Date",
ylab="Total number of steps")
?hist
plot(interval_avg, main="average daily activity",
xlab="5-minute interval",
ylab="average number of steps taken",
type="1")
plot(interval_avg, main="average daily activity",
xlab="5-minute interval",
ylab="average number of steps taken",
type=1)
?plot
type(interval_avg)
?interval_avg
str(interval_avg)
dimnames(interval_avg)
plot(dimnames(interval_avg), interval_avg, main="average daily activity",
xlab="5-minute interval",
ylab="average number of steps taken",
type=1)
dim(interval_avg)
dim(dimnames(interval_avg))
str(dimnames(interval_avg))
dim(dimnames(interval_avg))
x <- dimnames(interval_avg)
str(x)
plot(data$interval, interval_avg, main="average daily activity",
xlab="5-minute interval",
ylab="average number of steps taken",
type=1)
length(data$interval)
length(unique(data$interval))
unique(data$interval)
plot(unique(data$interval), interval_avg, main="average daily activity",
xlab="5-minute interval",
ylab="average number of steps taken",
type=1)
plot(unique(data$interval), interval_avg, main="average daily activity",
xlab="5-minute interval",
ylab="average number of steps taken",
type="l")
seq(along=interval_avg)[interval_avg = max(interval_avg)]
interval[interval_avg = max(interval_avg)]
interval_avg[interval_avg = max(interval_avg)]
interval_avg[interval_avg == max(interval_avg)]
data <- read.csv("activity.csv")
summary(data)
sum(is.na(data$interval))
sum(is.na(data$date))
sum(is.na(data$steps))
data$steps[is.na(data$steps)] <- 0
data$steps[is.na(data$steps)] <- interval_avg[seq(along=data[is.na(data$steps)])]
is.na(data$steps)
sum(is.na(data$steps))
?tapply
?lapply
?mapply
data[,"weekday"] <- weekdays(data$date)
data[,"weekday"] <- weekdays(as.date(data$date))
str(data$date)
data[,"weekday"] <- weekdays(strptime(data$date, "%Y-%m-%d"))
data$weekday
data[,"weekday"] <- weekdays(strptime(data$date, "%Y-%m-%d")) == "Saturday" ? "weekend" : "weekday"
data[,"weekday"] <- weekdays(strptime(data$date, "%Y-%m-%d"))
data$weekday
summary(data$weekday)
factor(data$weekday)
summary(factor(data$weekday))
str(factor(data$weekday))
data[,"weekday"] <- factor(weekdays(strptime(data$date, "%Y-%m-%d")))
summary(data$weekday)
factor(data$weekday, c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"), c("weekday", "weekday", "weekday", "weekday", "weekday", "weekend", "weekend"))
factor(data$weekday, levels=c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"), labels=c("weekday", "weekday", "weekday", "weekday", "weekday", "weekend", "weekend"))
data$weekday <- factor(data$weekday, levels=c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"), labels=c("weekday", "weekday", "weekday", "weekday", "weekday", "weekend", "weekend"))
summary(data$weekday)
data$weekday <- factor(data$weekday)
summary(data$weekday)
data[,"weekday"] <- factor(weekdays(strptime(data$date, "%Y-%m-%d")))
data$weekday <- factor(factor(data$weekday, levels=c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"), labels=c("weekday", "weekday", "weekday", "weekday", "weekday", "weekend", "weekend")))
library(lattice)
xyplot(data$steps ~ data$interval | data = data, layout = c(2,1))
xyplot(steps ~ interval | weekday, data = data, layout = c(2,1))
xyplot(steps ~ interval | weekday, data = data, layout = c(1,2))
xyplot(sum(steps) ~ interval | weekday, data = data, layout = c(1,2))
xyplot(tapply(steps, interval, sum) ~ interval | weekday, data = data, layout = c(1,2))
summary(activity)
activity <- read.csv("activity.csv")
activity$date <- strptime(activity$date, format = "%Y-%m-%d")
summary(activity)
total_steps <- tapply(activity$steps, activity$date, sum, na.rm = T)
str(activity$steps)
str(activity$date)
activity$datetime <- strptime(activity$date, format = "%Y-%m-%d")
total_steps <- tapply(activity$steps, activity$date, sum, na.rm = T)
activity <- read.csv("activity.csv")
summary(activity)
total_steps <- tapply(activity$steps, activity$date, sum, na.rm = T)
hist(total_steps,
xlab = "steps",
ylab = "number of days",
main = "Total number of steps per day")
mean(total_steps)
median(total_steps)
interval_avg <- tapply(activity$steps, activity$interval, mean, na.rm = T)
plot(interval_avg,
main="average daily activity",
xlab="5-minute interval",
ylab="average number of steps taken",
type="l")
interval_avg[interval_avg == max(interval_avg)]
sum(is.na(activity$steps))
activity$steps[is.na(activity$steps)] <-
interval_avg[seq(along = activity[is.na(data$steps)])]
activity$steps[is.na(activity$steps)] <-
interval_avg[seq(along = activity[is.na(activity$steps)])]
is.na(activity$steps)
activity[is.na(activity$steps)]
activity$steps[is.na(activity$steps)] <-
interval_avg[seq(along = activity)[is.na(activity$steps)]]
summary(activity)
activity_imputed$steps[missing] <- interval_avg[factor(activity$interval)]
activity_imputed <- activity
missing <- is.na(activity$steps)
activity_imputed$steps[missing] <- interval_avg[factor(activity$interval)]
activity_imputed$steps[missing] <- interval_avg[activity$interval[missing]]
activity$interval[missing]
str(activity$interval[missing])
str(missing)
str(activity$steps[missing])
str(activity$interval[missing])
str(interval[activity$interval[missing]])
str(interval_avg[activity$interval[missing]])
str(interval_avg)
interval_avg["0"]
interval_avg["5"]
interval_avg[5]
interval_avg[toString(5)]
str(interval_avg[toString(activity$interval[missing])])
toString(activity$interval[missing])]
toString(activity$interval[missing])
as.string(activity$interval[missing])
as.chr(activity$interval[missing])
?as
as.string
as.char
as.chr
?as.
?as
?as.numeric
?as.character
as.character(activity$interval[missing])
activity_imputed$steps[missing] <- interval_avg[as.character(activity$interval[missing])]
total_steps <- tapply(activity_imputed$steps, activity_imputed$date, sum)
hist(total_steps,
xlab = "steps",
ylab = "number of days",
main = "Total number of steps per day")
mean(total_steps)
median(total_steps)
data[,"weekday"] <- factor(weekdays(activity$datetime))
data$weekday <- factor(factor(data$weekday, levels=c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"), labels=c("weekday", "weekday", "weekday", "weekday", "weekday", "weekend", "weekend")))
xyplot(steps ~ interval | weekday, data = activity)
activity_imputed$weekday <- weekdays(activity_imputed$datetime)
activity_imputed$weekday <- ifelse(
(activity_imputed$datetime == "Saturday")
| (activity_imputed$datetime == "Sunday"),
"weekend",
"weekday")
activity_imputed$weekday <- weekdays(activity_imputed$datetime)
activity_imputed
summary(activity_imputed)
summary(is.na(activity_imputed$date))
sum(is.na(activity_imputed$date))
weekdays(activity_imputd$date)
weekdays(activity_imputd$date)
weekdays(activity_imputed$date)
summary(activity_imputed)
set.seed(0)
activity <- read.csv("activity.csv")
activity$datetime <- strptime(activity$date, format = "%Y-%m-%d")
summary(activity)
total_steps <- tapply(activity$steps, activity$date, sum, na.rm = T)
hist(total_steps,
xlab = "steps",
ylab = "number of days",
main = "Total number of steps per day")
mean(total_steps)
median(total_steps)
interval_avg <- tapply(activity$steps, activity$interval, mean, na.rm = T)
plot(interval_avg,
main="average daily activity",
xlab="5-minute interval",
ylab="average number of steps taken",
type="l")
interval_avg[interval_avg == max(interval_avg)]
sum(is.na(activity$steps))
activity_imputed <- activity
missing <- is.na(activity$steps)
activity_imputed$steps[missing] <-
interval_avg[as.character(activity$interval[missing])]
total_steps <- tapply(activity_imputed$steps, activity_imputed$date, sum)
hist(total_steps,
xlab = "steps",
ylab = "number of days",
main = "Total number of steps per day")
mean(total_steps)
median(total_steps)
activity_imputed$weekday <- weekdays(activity_imputed$datetime)
activity_imputed$weekday <- ifelse(
(activity_imputed$datetime == "Saturday")
| (activity_imputed$datetime == "Sunday"),
"weekend",
"weekday")
activity_imputed$weekday <- factor(activity_imputed$weekday)
xyplot(steps ~ interval | weekday, data = activity)
xyplot(steps ~ interval | weekday, data = activity_imputed)
xyplot(tapply(steps, interval, mean) ~ interval
| weekday, data = activity_imputed)
xyplot(steps ~ interval | weekday, data = activity_imputed)
summary(activity_imputed$weekday)
activity_imputed$weekday <- weekdays(activity_imputed$datetime)
summary(activity_imputed$weekday)
str(activity_imputed$weekday)
str(activity_imputed$datetime)
summary(activity_imputed$datetime)
activity_imputed$weekday <- ifelse(
(activity_imputed$datetime == "Saturday")
| (activity_imputed$datetime == "Sunday"),
"weekend",
"weekday")
activity_imputed$weekday
str(activity_imputed$weekday)
summary(activity_imputed$weekday)
summary(factor(activity_imputed$weekday))
weekdays(activity_imputed$datetime)
head(weekdays(activity_imputed$datetime))
tail(weekdays(activity_imputed$datetime))
?head
head(weekdays(activity_imputed$datetime), n = 100)
head(weekdays(activity_imputed$datetime), n = 500)
head(weekdays(activity_imputed$datetime), n = 1000)
activity_imputed$weekday <- weekdays(activity_imputed$datetime)
activity_imputed$weekday <- ifelse(
(activity_imputed$datetime == "Saturday")
|| (activity_imputed$datetime == "Sunday"),
"weekend",
"weekday")
activity_imputed$weekday <- factor(activity_imputed$weekday)
summary(activity_imputed)
activity_imputed$weekday <- weekdays(activity_imputed$datetime)
summary(activity_imputed$weekday)
str(activity_imputed$weekday)
activity_imputed$weekday
sum(activity_imputed$datetime == "Saturday")
sum(activity_imputed$datetime == "Sunday")
sum(activity_imputed$datetime = "Sunday")
str(activity_imputed$datetime)
activity_imputed$weekday <- weekdays(activity_imputed$datetime)
activity_imputed$weekday <- ifelse(
(activity_imputed$weekday == "Saturday")
|| (activity_imputed$weekday == "Sunday"),
"weekend",
"weekday")
activity_imputed$weekday <- factor(activity_imputed$weekday)
xyplot(steps ~ interval | weekday, data = activity_imputed)
summary(activity$weekday)
summary(activity_imputed$weekday)
activity_imputed$weekday <- weekdays(activity_imputed$datetime)
str(activity_imputed$weekday)
sum(activity_imputed$weekday == "Monday")
sum(activity_imputed$weekday == "Tuesday")
sum(activity_imputed$weekday == "Sunday")
sum(activity_imputed$weekday == "Saturday")
activity_imputed$weekday <- ifelse(
(activity_imputed$weekday == "Saturday")
| (activity_imputed$weekday == "Sunday"),
"weekend",
"weekday")
activity_imputed$weekday <- factor(activity_imputed$weekday)
summary(activity_imputed$weekday)
xyplot(steps ~ interval | weekday, data = activity_imputed)
?xyplot
xyplot(steps ~ interval | weekday, data = activity_imputed, layout=c(1,2))
?tapply
interval_avg <- tapply(activity_imputed$steps,
c(activity_imputed$interval, activity_imputed$weekday),
mean)
activity_weekday = activity_imputed[activity_imputed$weekday == "weekday",]
activity_weekend = activity_imputed[activity_imputed$weekday == "weekend",]
interval_avg_weekday <- tapply(activity_weekday$steps,
activity_weekday$interval,
mean)
interval_avg_weekend <- tapply(activity_weekend$steps,
activity_weekend$interval,
mean)
avg$steps <- interval_avg_weekday
avg$interval <- unique(activity_weekday$interval)
avg <- matrix
avg$steps <- interval_avg_weekday
avg$interval <- unique(activity_weekday$interval)
?data.frame
?rep
avg <- data.frame(interval_avg_weekday,
unique(activity_weekday$interval),
rep("weekday", length(interval_avg_weekday)),
row.names = c("steps", "interval", "weekday"))
avg <- data.frame(interval_avg_weekday,
unique(activity_weekday$interval),
rep("weekday", length(interval_avg_weekday)))
str(avg)
avg <- data.frame(
cbind(interval_avg_weekday, interval_avg_weekend),
cbind(unique(activity_weekday$interval),
unique(activity_weekend$interval)),
cbind(rep("weekday", length(interval_avg_weekday)),
rep("weekend", length(interval_avg_weekend))),
row.names = c("a", "b", "c"))
avg <- data.frame(
cbind(interval_avg_weekday, interval_avg_weekend),
cbind(unique(activity_weekday$interval),
unique(activity_weekend$interval)),
cbind(rep("weekday", length(interval_avg_weekday)),
rep("weekend", length(interval_avg_weekend)))
)
summary(avg)
avg <- data.frame(
rbind(interval_avg_weekday, interval_avg_weekend),
rbind(unique(activity_weekday$interval),
unique(activity_weekend$interval)),
rbind(rep("weekday", length(interval_avg_weekday)),
rep("weekend", length(interval_avg_weekend)))
)
summary(avg)
str(avg)
avg <- data.frame(
cbind(interval_avg_weekday, interval_avg_weekend),
cbind(unique(activity_weekday$interval),
unique(activity_weekend$interval)),
cbind(rep("weekday", length(interval_avg_weekday)),
rep("weekend", length(interval_avg_weekend)))
)
summary(avg)
dim(avg)
dim(cbind(interval_avg_weekday, interval_avg_weekend))
dim(rbind(interval_avg_weekday, interval_avg_weekend))
dim(vstack(interval_avg_weekday, interval_avg_weekend))
?vstack
dim(c(interval_avg_weekday, interval_avg_weekend))
c(interval_avg_weekday, interval_avg_weekend)
length(c(interval_avg_weekday, interval_avg_weekend))
avg <- data.frame(
c(interval_avg_weekday, interval_avg_weekend),
c(unique(activity_weekday$interval),
unique(activity_weekend$interval)),
c(rep("weekday", length(interval_avg_weekday)),
rep("weekend", length(interval_avg_weekend)))
)
summary(avg)
str(avg)
avg <- data.frame(
c(interval_avg_weekday, interval_avg_weekend),
c(unique(activity_weekday$interval),
unique(activity_weekend$interval)),
c(rep("weekday", length(interval_avg_weekday)),
rep("weekend", length(interval_avg_weekend))),
row.names = c("steps", "interval", "weekday")
)
avg <- data.frame(
c(interval_avg_weekday, interval_avg_weekend),
c(unique(activity_weekday$interval),
unique(activity_weekend$interval)),
c(rep("weekday", length(interval_avg_weekday)),
rep("weekend", length(interval_avg_weekend)))
)
str(avg)
summary(avg)
?data.frame
avg <- data.frame(
c(interval_avg_weekday, interval_avg_weekend),
c(unique(activity_weekday$interval),
unique(activity_weekend$interval)),
c(rep("weekday", length(interval_avg_weekday)),
rep("weekend", length(interval_avg_weekend))),
col.names = c("steps", "interval", "weekday")
)
xyplot(steps ~ interval | weekday,
data = avg,
layout=c(1,2),
xlab="Interval",
ylab="Number of steps")
avg <- data.frame(
c(interval_avg_weekday, interval_avg_weekend),
c(unique(activity_weekday$interval),
unique(activity_weekend$interval)),
c(rep("weekday", length(interval_avg_weekday)),
rep("weekend", length(interval_avg_weekend))),
col.names = c("steps", "interval", "weekday")
)
xyplot(steps ~ interval | weekday,
data = avg,
layout=c(1,2),
xlab="Interval",
ylab="Number of steps")
xyplot(steps ~ interval | avg$weekday,
data = avg,
layout=c(1,2),
xlab="Interval",
ylab="Number of steps")
xyplot(avg$steps ~ avg$interval | avg$weekday,
data = avg,
layout=c(1,2),
xlab="Interval",
ylab="Number of steps")
summary(avg$steps)
summary(avg)
str(avg)
avg <- data.frame(
steps = c(interval_avg_weekday, interval_avg_weekend),
interval = c(unique(activity_weekday$interval),
unique(activity_weekend$interval)),
c(rep("weekday", length(interval_avg_weekday)),
rep("weekend", length(interval_avg_weekend))),
)
colnames(avg) <- c("steps", "interval", "weekday")
summary(avg)
xyplot(steps ~ interval | weekday,
data = avg,
layout=c(1,2),
xlab="Interval",
ylab="Number of steps")
xyplot(steps ~ interval | weekday,
data = avg,
layout=c(1,2),
xlab="Interval",
ylab="Number of steps",
type="l")
